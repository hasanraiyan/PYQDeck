
{
  "branches": [
    {
      "id": "cse",
      "name": "Computer Science Engineering",
      "semesters": [
        {
          "id": "sem3",
          "number": 3,
          "subjects": [
            {
              "id": "cse301",
              "name": "C++ & Object Oriented Programming",
              "code": "CSE301",
              "questions": [
                 {
                  "questionId": "cse301_2023_1a",
                  "year": 2023,
                  "qNumber": "Q1a",
                  "chapter": "Module 4: Overloading, Templates and Inheritance",
                  "text": "To prevent any method from overriding we declare the method as\n(i) static\n(ii) final\n(iii) const\n(iv) None of the above",
                  "type": "MCQ",
                  "marks": 2
                },
                
                {
                     "questionId": "cse301_2019_1e",
                     "year": 2019,
                     "qNumber": "Q1e",
                     "chapter": "Module 4: Overloading, Templates and Inheritance",
                     "text": "Which class/set of classes can illustrate polymorphism in the following code\n```cpp\nabstract class student\n{\n  public: int marks;\n  virtual calc_grade() = 0; \n}\nclass topper: public student\n{\n  public: calc_grade() \n  { return 10; }\n};\nclass average: public student\n{\n  public: calc_grade() \n  { return 20; }\n};\nclass failed{int marks;};\n```\n(i) Only class student can show polymorphism\n(ii) Only class student and topper together can show polymorphism\n(iii) All class students, topper and average together can show polymorphism\n(iv) Class failed should also inherit class student for this code to work for polymorphism",
                     "type": "MCQ",
                     "marks": 2
                 }
              ]
            }
          ]
        }
      ]
    },
    {
        "id": "ece",
        "name": "Electronics & Communication",
        "semesters": [
             {
                "id": "ece_sem3",
                "number": 3,
                "subjects": [
                    {
                       "id": "ece301",
                       "name": "Network Theory",
                       "code": "ECE301",
                       "questions": [
                           {
                              "questionId": "ece301_2023_1a",
                              "year": 2023,
                              "qNumber": "Q1a",
                              "chapter": "Module 1: Basic Circuits",
                              "text": "State Thevenin's theorem.",
                              "type": "Definition",
                              "marks": 2
                            }
                       ]
                    }
                ]
            }
        ]
    }
  ]
}